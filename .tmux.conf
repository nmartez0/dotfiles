set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Enable mouse mode
set -g mouse on

# Disable exit-empty
set -s exit-empty off

# 256 color support
set -g default-terminal "tmux-256color"
set-option -sa terminal-features ',xterm-256color:RGB'

set -g history-limit 10000

#Neovim recommendations
set-option -sg escape-time 10
set-option -g focus-events on

setw -g monitor-activity on
set -g visual-activity on

# STYLE

# Pane seperation colors, i.e., lines between panes
set -g pane-active-border-style 'fg=colour243'
set -g pane-border-style 'fg=colour236'

# Brighter text for active window pane
set -g window-style 'fg=colour245'
set -g window-active-style 'fg=colour252'

# Add padding to window names, and visual flag for window activity
set-option -g window-status-format ' #W#{?window_activity_flag,!,} ' 
set-option -g window-status-separator ''

# Default gray on gray status bar style
set-option -g status-style bg=colour236,fg=colour248

# Inactive window labels match the color of the status bar
set-window-option -g window-status-style bg=colour236,fg=colour248

# Active window label is slightly highlighted. Append -Z if a pane is zoomed.
set-window-option -g window-status-current-style bg=colour24,fg=colour14
set-window-option -g window-status-current-style bg=colour239,fg=colour251
set-option -g window-status-current-format ' #W#{?window_zoomed_flag,-Z,} '

# Left status
set -g status-left "#[bg=colour239,fg=colour252]"

# Right status
set -g status-right "#[bg=colour238,fg=colour244] %d %b %H:%M "

# Vim friendly configuration
set -g mode-keys vi

# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# easy-to-remember split pane commands
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# moving between panes with vim movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5